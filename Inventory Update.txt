Algorithms: Inventory Update
Compare and update the inventory stored in a 2D array against a second 2D array of a fresh delivery. Update the current existing inventory item quantities (in arr1). If an item cannot be found, add the new item and quantity into the inventory array. The returned inventory array should be in alphabetical order by item.

Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.

Exercise:

function updateInventory(arr1, arr2) {
    // All inventory must be accounted for or you're fired!

    let removed = [];

    //console.log('arr1', arr1);
    //console.log('arr2', arr2);

    // If we find the same item, 
    //add the item value of the 2nd array to the items total in the first array 
    // and remove the item from the 2nd array
    for (let i = 0; i < arr1.length; i++) {
        for (let j = 0; j < arr2.length; j++) {
        //console.log('arr2', arr2[j]);
            if (arr1[i][1] == arr2[j][1]){
                //console.log('arr1 item', arr1[i][1], 'arr2 item', arr2[j][1])
                arr1[i][0] += arr2[j][0];
                removed = arr2.splice(j,1);
                //console.log('arr1 after splice', arr1)
                //console.log('arr2 after splice', arr2)
            }
        }
    }

    // Combine arrays and sort according to alpha chars e.g arr1[x][1]
    arr1 = [...arr1, ...arr2].sort((a, b) => {
        if (a[1] < b[1]){
            return -1
        }
    });
    //console.log('arr1 after', arr1)
    //console.log('arr2 after', arr2)
    //console.log('removed after', removed)

    return arr1;
}

// Example inventory lists
var curInv = [
    [21, "Bowling Ball"],
    [2, "Dirty Sock"],
    [1, "Hair Pin"],
    [5, "Microphone"]
];

var newInv = [
    [2, "Hair Pin"],
    [3, "Half-Eaten Apple"],
    [67, "Bowling Ball"],
    [7, "Toothpaste"]
];

updateInventory(curInv, newInv);